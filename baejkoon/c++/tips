& > 해당 변수가 위치한 메모리에 입력값을 넣으라는 의미이다.

scanf(" %c", &name); > %c 앞에 공백을 넣어주는 이유 - 일반적인 자료형의 경우에는 이전에 입력된
enter나 공백묵자, 탭문자 등을 입력구분자로 처리하여 무시하지만 문자형 자료(char)의 경우에는
모든 문자를 입력으로 처리하게 된다. 만악 공백을 생략하게 되면 위에서 다른 값을 입력 받은 후 누른
enter가 버퍼에 저장되어 있다가 위의 입력명령을 만나면 name에 (enter)저장되어 엉뚱한 결과가 출력된다.

실수형 > 정수형 형변환 시에는 무조건 소수점 이하는 버림

변수 a가 정수형일때 (double)a / 4 하면 실수형 계산이됨

swith (num)
{
	case 1:		// num 값이 1일 경우
		printf()
		break;
	case 2:
		~~
		~~
	default:		// case에 해당하는 것이 없을 경우
		~~
}

조건연산자 max_data = (a>b) ? a:b;  a가 b보다 크면 a대입 아니면 b대입 (조건식 ? 식1 : 식2)

궁금점.1
무한루프에 정수값 입력받는곳에 소수점이 들어간 수를 입력하면 무한출력됨. 이유는? ex(loop1)

함수(function)
표준라이브러리 함수 - printf(), scanf()같이 C언어에 내장되어 있는 함수로 해당 함수가 포함된 헤더
파일을 #include하여 사용하는것.
사용자 졍의함수 - 사용자가 직접 정의해서 사용하는 함수

함수를 호출하기 위해서는 반드시 호출하려는 함수가 현재의 위치보다 앞에 정의돼 있어야 한다.
만약 함수가 main()(호출할 함수) 함수 아래에 있으면 이 main()함수 앞에 함수의 형태를 미리 선언해
주어야 한다.
ex)
void line();

int main()
{}
void line()
{}


함수도 변수와 같이 리턴값에 따라 자료형을 정의해 주어야 한다. 리턴값이 없는경우에는 void로
정의한다.
ex)
void ex()
{
	puts("==========");
}

문자열(string)
문자열을 출력하는 방법
char test[] = "hi";
printf("%s", test);

인수(argument) - 함수를 호출하면서 전달하는값
매개변수 - 함수에서 전달받은 값을 저장하는 변수

값에 의한 전달(call-by-value) - main()함수에서 다른함수를 호출(test(a, b))할때 a, b의 값을 가져와
새로운 변수 x, y를 생성하여 값을 저장하게 된다. 이후 이 값은 아무리 바꾸어도 main() 함수에 있는
a, b의 값은 변화가 없다

참조에 의한 전달(call-by-reference) - 매개변수 앞에 &을 붙여주는것. 이때는 a, b값을 가져오는
것이 아니라 a, b가 저장되어 있는 위치를 전달하여 그 위치의 이름을 x와 y로 새롭게 붙여주는
것이다. 즉 x, y는 a, b의 별명이라고 생각하면된다. 이 호출된 함수에서 값을 바꾸면 main()함수에도
적용이 된다.

배열(array)을 함수르 전달하는 방법 : 호출하는 곳에서는 배열의 이름을, 함수를 선언 하는곳에서는
배열이름 뒤에 "[]"를 붙여주면 된다. 이렇게 하면 새로운 배열을 생성하는것이 아니라 배열의
시작위치를 전달하게 되어 "참조에 의한 전달(call-by-reference)과 똑같이 작동하게 된다.

#include <math.h>
sqrt() 제곱근
abs(), fabs() 정수, 실수의 절댓값
floor() 소수점 버림
ceil() 소수점 올림
pow(a, b) a의 b제곱

const - 변수를 선언할때(const int a;)앞에 const를 붙여주면 이는 이 변수에 값을 넣어서 상수로
사용하겠다는 의마기 되며 따라서 이 때 선언된 변수는 더 이상 값을 변경시킬 수 없는 상수가
된다. 만약 변경시키는 코드를 넣게되면 컴파일을 하려고 할대 에러가 발생한다.
